# Workflow for attempting to identify club memberships for players who don't have one on record
# and thus potentially triggering a new build of the Astro site.
#
name: Update club memberships

on:
  # Runs at 22:15 UTC on day 15 of every month
  schedule:
    - cron: "15 22 15 * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: write
  id-token: write

env:
  BUILD_PATH: ./astrosite

jobs:
  update:
    name: Update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            echo "lockfile=yarn.lock" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager - defaulting to NPM..."
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            echo "lockfile=package-lock.json" >> $GITHUB_OUTPUT
            exit 0
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/${{ steps.detect-package-manager.outputs.lockfile }}
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}
      - name: Run script
        run: |
          npx tsx src/workflows/update-memberships.ts
        working-directory: ${{ env.BUILD_PATH }}
        env:
          TEETIME_CLUB_NUMBER: 0134   # Tapiola Golf
          TEETIME_USERNAME: 2762
          TEETIME_PASSWORD: ${{ secrets.TEETIME_PASSWORD }}
          WISEGOLF_USERNAME: lasse.koskela@gmail.com
          WISEGOLF_PASSWORD: ${{ secrets.WISEGOLF_PASSWORD }}
      - name: Commit changes
        run: |
          scripts/commit-changes.sh
        working-directory: ${{ env.BUILD_PATH }}
        env:
          GIT_AUTHOR_NAME: update-memberships.yml
          GIT_AUTHOR_EMAIL: lasse.koskela@gmail.com
          GIT_COMMITTER_NAME: update-memberships.yml
          GIT_COMMITTER_EMAIL: lasse.koskela@gmail.com
