---
import Layout from '../../layouts/Layout.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import EventCard from '../../components/events/EventCard.astro';
import MatchplayEventCard from '../../components/events/MatchplayEventCard.astro';
import Highlight from '../../components/Highlight.astro';

import { getAllEvents, getAllEventsGroupedByChronology } from '../../code/events';
import type { MatchplayEvent } from '../../schemas/events';
import type { Event } from '../../schemas/events';

function linkToEvent(event: any) {
    return `/events/${event.format}/${event.id}`;
}

const { past, ongoing, upcoming } = getAllEventsGroupedByChronology()

---

<Layout title="Tää ei oo viimeinen Hector?">
	<main>
		<div class="breadcrumbs">
			<Breadcrumb title="Home" href="/" />
		</div>
		<h1><span class="text-gradient">Events</span></h1>
		{ongoing.length > 0 ? (
				<Highlight>
					<h2>ONGOING</h2>
					{ongoing.map(event => {
						return (<p><strong><a href={linkToEvent(event)} style="color: white">{event.name}</a></strong> at <strong>{event.location}</strong>.</p>)
					})}
				</Highlight>
			) : null
		}
		{upcoming.length > 0 ? (
				<h2>Coming up</h2>
				<ul role="list" class="link-card-grid">
					{upcoming.map((event) => {
						if (event.format === 'matchplay') {
							return <MatchplayEventCard title={event.name} location={event.location} date={event.date} href={linkToEvent(event)}/>
						} else {
							return <EventCard title={event.name} location={event.location} date={event.date} href={linkToEvent(event)}/>
						}
					})}
				</ul>
			) : null
		}
		{past.length > 0 ? (
				<h2>Past events</h2>
				<ul role="list" class="link-card-grid">
					{past.map((event) => {
						if (event.format === 'matchplay') {
							return <MatchplayEventCard title={event.name} location={event.location} date={event.date} href={linkToEvent(event)}/>
						} else {
							return <EventCard title={event.name} location={event.location} date={event.date} href={linkToEvent(event)}/>
						}
					})}
				</ul>
			) : null
		}
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 900px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}

	h1 {
		text-transform: uppercase;
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
