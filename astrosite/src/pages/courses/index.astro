---
import Layout from '../../layouts/Layout.astro';
import CourseCard from '../../components/courses/CourseCard.astro';
import Breadcrumb from '../../components/Breadcrumb.astro';
import { getCollection } from 'astro:content';
import { getEventsAtCourse } from '../../code/courses';
import { compareDateStrings } from '../../code/dates';
import type { Course } from '../../schemas/courses';
import type { Event } from '../../schemas/events';


function linkToCourse(course: any) {
    return `/courses/${course.id}`;
}

type CourseAndMostRecentEvent = {
	course: Course;
	mostRecentEvent: Event|undefined;
};

const courses: Course[] = (await getCollection('courses')).map(course => course.data);

const coursesSortedByDate = courses
	.map(course => ({ course: course, mostRecentEvent: getEventsAtCourse(course.id)[0] }))
	.sort((a: CourseAndMostRecentEvent, b: CourseAndMostRecentEvent) => {
		const aDate = a.mostRecentEvent?.date
		const bDate = b.mostRecentEvent?.date

		if (!aDate && bDate) {
			return 1;
		} else if (!bDate && aDate) {
			return -1;
		}
		if (aDate && bDate) {
			const c = compareDateStrings(aDate, bDate);
			if (c !== 0) {
				return c;
			}
		}
		return a.course.name.localeCompare(b.course.name);
	})
	.map((courseAndEvent: CourseAndMostRecentEvent) => courseAndEvent.course)
	.reverse();

---
<Layout title="Courses">
    <main>
		<div class="breadcrumbs">
			<Breadcrumb title="Home" href="/" />
		</div>
        <h1><span class="text-gradient">Courses</span></h1>
        <ul role="list" class="link-card-grid">
            {coursesSortedByDate.map((course) => {
                return <CourseCard name={course.name} image={course.hero_image} location={course.contact.address} href={linkToCourse(course)}/>
            })}
        </ul>
    </main>
</Layout>

<style>
	main {
		margin: auto;
		width: 900px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}

	h1 {
		text-transform: uppercase;
		font-size: 3.04rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}

	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
