---

import { getPlayerName } from '../../code/players';
import HectorWinIcon from './icons/HectorWinIcon.astro'
import VictorWinIcon from './icons/VictorWinIcon.astro'
import MatchplayWinIcon from './icons/MatchplayWinIcon.astro'

interface Props {
	id: string;
	name: { first: string; last: string };
	image?: string;
	href: string;
	starts: number;
	hectorWins: number[];
	victorWins: number[];
	matchplayWins: number[];
	handicap: number|undefined;
}

const { id, image, href, starts, hectorWins, victorWins, matchplayWins, handicap } = Astro.props;

const fullname = getPlayerName(id)

const wins = hectorWins.length + victorWins.length + matchplayWins.length;
const winsText = wins === 1 ? "1 win" : `${wins} wins`;
const startsText = starts === 1 ? "1 start" : `${starts} starts`;

---

<li class="link-player">
	<a href={href}>
		{image ? <img src={image} title={fullname}/><br/> : ""}
		<span class="title">
			{fullname}
			{handicap ? (<span class="handicap">(HCP {Number(handicap).toFixed(1)})</span>) : ""}
		</span>
		<div class="track-record">
			<div class="participation-container">
				<div class="starts">{startsText}</div>
				<div class="wins">{winsText}</div>
			</div>
			<div class="wins-icons">
				{hectorWins.length > 0 ? hectorWins.map(year => <HectorWinIcon year={year} />) : null}
				{victorWins.length > 0 ? victorWins.map(year => <VictorWinIcon year={year} />) : null}
				{matchplayWins.length > 0 ? matchplayWins.map(year => <MatchplayWinIcon year={year} />) : null}
			</div>
		</div>
	</a>
</li>

<style>
	.link-player {
		list-style: none;
		display: flex;
		padding: 1px;
		max-width: 600px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-player > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	.link-player img {
		max-width: calc(100% - 0rem);
		max-height: 200px;
		border-radius: 2px;
	}
	.link-player .title {
		display: block;
		font-size: 1.25rem;
	}
	.link-player .handicap {
		font-size: 0.7em;
		color: lightblue;
	}
	.link-player .starts {
		display: inline;
		font-size: 1.0rem;
	}
	.link-player .wins {
		display: inline;
		font-size: 1.0rem;
	}
	.track-record {
		display: flex;
		flex-direction: row;
	}
	.participation-container {
		display: flex;
		flex-grow: 1;
		flex-direction: column;
		align-items: flex-start;
	}
	.wins-icons {
		margin-top: 0.5em;
		padding-bottom: 2px;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	.link-player:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-player:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}

</style>
